# --- QMIX specific parameters ---

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 50000
evaluation_epsilon: 0.0

runner: "episode"

buffer_size: 5000

# update the target network every {} episodes
target_update_interval_or_tau: 200


obs_agent_id: True
#obs_last_action: False
obs_individual_obs: False


# use the Q_Learner to train
standardise_returns: False
standardise_rewards: True

agent_output_type: "q"
#learner: "q_learner"
learner: "abstract_q_learner"
double_q: True
mixer: "qmix"
use_rnn: True
mixing_embed_dim: 32
hypernet_layers: 2
hypernet_embed: 64

# multi-task
use_task_encoder: False          # In MTL, this should be set to True
independent_task_encoder: False # if False, task embedding is learned by the critic
optimal_transport_loss: False   # use optimal transport loss on trajectories instead of wasserstein between state transitions
num_embeddings: 10
task_embedding_dim: 64
agent_embedding_dim: 64
state_embedding_dim: 128
observation_embedding_dim: 32
fm_hidden_dim: 256
# independent task encoder for state abstraction
test_extrapolate: False
test_interpolate: False
n_train_tasks: 2 #4

name: "qmix"
